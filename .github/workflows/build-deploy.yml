name: Build and Deploy code

on: [push, pull_request]

jobs:
  build:   #job1
    runs-on: ubuntu-latest
    environment:
      name: testing  #congfigured in github actions settings page, the environment vars will be kept as secret 
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          PPOSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
        - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: pulling git repo to runner ubuntu machine
        uses: actions/checkout@v2
      - name: say hi to the world
        run: echo "Hello World"
      - name: install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: run tests with pytest   # to run tests with pytest
        run: |
          pip install pytest
          pytest 
        # Create a docker image automatically and push it to dockerhub
      # - name: login in dockerhub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
       
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      
      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKERHUB_USERNAME }}/socialnet_api:latest

      #.................................Continuous delivery.............................................
  deploy:
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: deploying stuff to production
        run: echo "Add commands to deploy to heroku/ubuntu here"
